---
- name: add hosts to Ansible 
  hosts: localhost
  gather_facts: true  
  vars:
      host_ip: "{{ ANSIBLE_HOST_IP }}"
      container_group: "{{ CONTAINER_GROUP }}"
      host_tier: "{{ HOST_TIER }}"
  tasks:
    - name: Add host 
      add_host:
        name: "{{ ANSIBLE_HOST_NAME }}"
        ansible_host: "{{ ANSIBLE_HOST_IP }}"
        ansible_user: "{{ ANSIBLE_USER }}"
      when: 
        - host_ip != "localhost"
    # - name: Add localhost 
    #   set_fact:
        
    #     target_machine: localhost
    #   when: 
    #     - host_ip == "localhost"
    # - name: set localhost
    #   set_fact:
    #     target_machine : localhost
    #   when: 
    #     - host_ip == "localhost"

    # - name: Add localhost 
    #   add_host:
    #     hostname: localhost
    #     groups: target_machine

    # - name: Add host 
    #   add_host:
    #     name: target_machine
    #     ansible_host: localhost
    #   when: 
    #     - host_ip == "localhost"

    #   when: 
    #     - host_ip == "localhost"
    # - name: set connection as local
    #   set_fact:
    #     ansible_connection: "local"
    #   when: host_ip == "localhost"
    #     # "Failed to connect to the host via ssh: ssh: Could not resolve hostname target_machine: Temporary failure in name resolution
# ansible-playbook -i inventory.ini create.yaml

- name: docker playbook
  # vars:
  #   host_ip: "{{ ANSIBLE_HOST_IP }}"
  hosts: 
    # - 127.0.0.1
    # - "{{ target_machine if host_ip!='localhost' else 'localhost' }}"
    # - target_machine | default('localhost')
    # - "{{ target_machine | default('localhost') }}"
    # - target_machine
    # - target_machine:&all
    # - all[-1] 
    # - target_machine 
    - "{{ ANSIBLE_HOST_NAME }}"
  gather_facts: true

  tasks:
        
    - name: Deploy stack
      community.docker.docker_stack:
        state: present
        name: alfstack
        compose:
          - version: '3'
            services:
              solr6:
                image: docker.io/alfresco/alfresco-search-services:2.0.6
                deploy:
                  placement:
                    constraints:
                      - "{{ item }}"
                environment:
                  # Solr needs to know how to register itself with Alfresco
                  SOLR_ALFRESCO_HOST: "alfresco"
                  SOLR_ALFRESCO_PORT: "8080"
                  # Alfresco needs to know how to call solr
                  SOLR_SOLR_HOST: "solr6"
                  SOLR_SOLR_PORT: "8983"
                  # Create the default alfresco and archive cores
                  SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco,archive"
                  # HTTPS or SECRET
                  ALFRESCO_SECURE_COMMS: "secret"
                  # SHARED SECRET VALUE
                  JAVA_TOOL_OPTIONS: >-
                    -Dalfresco.secureComms.secret=secret
                ports:
                  - "8083:8983" # Browser port
                # volumes:
                #   - "{{ CLIENT_MNT_DIR }}/{{VOLUME_DIR}}:{{ CONTAINER_DATA_DIR }}"
    
      loop:
        "{{ LABELS }}"
              
