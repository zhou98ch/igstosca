tosca_definitions_version: tosca_simple_yaml_1_3
imports:      
  - ../../igs.nodes.docker/IGSDockerApplication/NodeType.tosca
  - ../../igs.nodes.Solr/NodeType.tosca
  - ../../../capabilitytypes/igs.capabilities.container/Solr/CapabilityType.tosca
# every container:
# change name
# change imports 
# change  derived_from
# comment out the ansible_user ansible_name in properties
# add capabilities and corresboding imports
node_types:
  Alfresco.nodes.DockerContainer.Solr:
    derived_from: igs.nodes.docker.DockerApplication
                # ALFRESCO_SECURE_COMMS: "secret"
            
                # JAVA_TOOL_OPTIONS: >-
                #   -Dalfresco.secureComms.secret=secret
    properties:
      mem_limit: 
        type:  scalar-unit.size
        default: 2g
        constraints:
          - less_or_equal: 2g

      container_port:
        type: string
        default: 8083
      host_port:
        type: string
        default: 8983

      solr_alfresco_host: 
        type: string
        default: alfresco
      solr_alfresco_port: 
        type: string
        default: "8080"
        # Alfresco needs to know how to call solr
      solr_solr_host: 
        type: string
        default: solr6
      solr_solr_port:
        type: string
        default: "8983"
      # Create the default alfresco and archive cores
      solr_create_alfresco_defaults:
        type: string
        default: alfresco,archive
      # alfresco_secure_comms:
      #   type: string
      #   default: https
      alfresco_secure_comms:
        type: string
        default: secret
      alfresco_secure_comms_secret:
        type: string
        default: secret
      # ansible_host:
      #   type: string
      #   default: { get_attribute: [ host, public_address ] }
      # ansible_user:
      #   type: string
      #   default: { get_attribute: [ host, username ] }

      container_data_dir:
        type: string
        required: false
        default: /opt/alfresco-search-services/data

    capabilities: 
      containerApplication:
        valid_source_types: [ igs.nodes.SolrSearch ]
        type: igs.capabilities.container.Solr

    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create: 
            inputs:
              CLIENT_MNT_DIR:
                type: string
                required: true
                default: { get_property: [ SELF, client_mnt_path ] } 
              VOLUME_DIR:
                type: string
                required: true
                default: { get_property: [ SELF, volume_dir ] }
              CONTAINER_DATA_DIR:
                type: string
                required: true
                default: { get_property: [ SELF, container_data_dir ] }
              MEM_LIMIT:
                type: string
                required: true
                default: { get_property: [ SELF, mem_limit ] }

              SOLR_ALFRESCO_HOST:
                type: string
                required: true
                default: { get_property: [ SELF, solr_alfresco_host ] }
              SOLR_ALFRESCO_PORT:
                type: string
                required: true
                default: { get_property: [ SELF, solr_alfresco_port ] }
              SOLR_SOLR_HOST:
                type: string
                required: true
                default: { get_property: [ SELF, solr_solr_host ] }
              SOLR_SOLR_PORT:
                type: string
                required: true
                default: { get_property: [ SELF, solr_solr_port ] }
              SOLR_CREATE_ALFRESCO_DEFAULTS:
                type: string
                required: true
                default: { get_property: [ SELF, solr_create_alfresco_defaults ] }
              ALFRESCO_SECURE_COMMS:
                type: string
                required: true
                default: { get_property: [ SELF, alfresco_secure_comms ] }
              ALFRESCO_SECURE_COMMS_SECRET:
                type: string
                required: false
                default: { get_property: [ SELF, alfresco_secure_comms_secret ] }
              CONTAINER_PORT:
                type: string
                required: true
                default: { get_property: [ SELF, container_port ] }
              HOST_PORT:
                type: string
                required: true
                default: { get_property: [ SELF, host_port ] }
              ANSIBLE_HOST_IP:
                type: string
                required: true
                default: { get_attribute: [SELF, host, ansible_host_ip ] }
              ANSIBLE_USER:
                type: string
                required: true
                default: { get_attribute: [SELF, host, ansible_user ] }
              ANSIBLE_HOST_NAME:
                type: string
                required: true
                default: { get_attribute: [SELF, host, ansible_host_name ] } 
              HOST_TIER:
                type: string
                required: true
                default: { get_attribute: [SELF, host, tier ] }
              CONTAINER_GROUP:
                type: string
                required: true
                default: { get_property: [ SELF, group] }
              LABELS:
                type: string
                required: true
                default: { get_property: [ SELF, labels] }
            implementation:
              primary: playbooks/create-govern-stack.yaml 



