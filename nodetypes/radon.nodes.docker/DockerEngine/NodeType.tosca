tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.docker.DockerEngine:
    derived_from: radon.nodes.abstract.ContainerRuntime
    metadata:
      targetNamespace: "radon.nodes.docker"
      abstract: "false"
      final: "false"
    attributes:
      port:
        type: integer
        default: { get_attribute: [ SELF, docker, port ] }
    requirements:
      - host:
          capability: tosca.capabilities.Node
          node: radon.nodes.VM.EC2
          relationship: tosca.relationships.HostedOn
    capabilities:
      host:
        occurrences: [ 1, UNBOUNDED ]
        valid_source_types: [ radon.nodes.docker.DockerApplication ]
        type: radon.capabilities.container.DockerRuntime
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          configure:
            inputs:
              ssh_user:
                type: string
                default: { get_attribute: [ SELF, host, ssh_user ] }
              ssh_key_file:
                type: string
                default: { get_attribute: [ SELF, host, ssh_key_file ] }
            implementation:
              primary: create
              timeout: 0
    artifacts:
      create:
        type: radon.artifacts.Ansible
        file: create.yml
